; 
(set-info :status unknown)
(declare-fun nc () (_ BitVec 2))
(declare-fun nca () (_ BitVec 4))
(declare-fun n () (_ BitVec 296))
(declare-fun at () (_ BitVec 8))
(declare-fun cat () (_ BitVec 16))
(declare-fun t_ () (_ BitVec 32))
(declare-fun a () (_ BitVec 64))
(declare-fun ncat () (_ BitVec 128))
(declare-fun ca () (_ BitVec 256))
(declare-fun c () (_ BitVec 512))
(assert
 (let (($x74 (and (xor (bvsgt n (_ bv127314748520905380391777855525586135065716774604121015664758778084648831235208544136462335 296)) (bvslt nc (_ bv0 2))) (xor (bvsgt n (_ bv127314748520905380391777855525586135065716774604121015664758778084648831235208544136462335 296)) (and (distinct (bvand nc (_ bv1 2)) (_ bv0 2)) true)))))
 (let (($x64 (= ((_ extract 1 0) nca) nc)))
 (let (($x81 (and (= ((_ extract 3 0) (bvlshr at (_ bv4 8))) nca) (and $x64 (and $x74 (= ((_ extract 1 0) (bvlshr nca (_ bv2 4))) nc))))))
 (let (($x58 (= ((_ extract 3 0) at) nca)))
 (let (($x52 (= ((_ extract 7 0) cat) at)))
 (let (($x84 (and $x52 (and (= ((_ extract 7 0) (bvlshr cat (_ bv8 16))) at) (and $x58 $x81)))))
 (let (($x46 (= ((_ extract 15 0) t_) cat)))
 (let (($x87 (and (= ((_ extract 31 0) (bvlshr a (_ bv32 64))) t_) (and $x46 (and (= ((_ extract 15 0) (bvlshr t_ (_ bv16 32))) cat) $x84)))))
 (let (($x40 (= ((_ extract 31 0) a) t_)))
 (let (($x34 (= ((_ extract 63 0) ncat) a)))
 (let (($x90 (and $x34 (and (= ((_ extract 63 0) (bvlshr ncat (_ bv64 128))) a) (and $x40 $x87)))))
 (let (($x28 (= ((_ extract 127 0) ca) ncat)))
 (let (($x93 (and (= ((_ extract 255 0) (bvlshr c (_ bv256 512))) ca) (and $x28 (and (= ((_ extract 127 0) (bvlshr ca (_ bv128 256))) ncat) $x90)))))
 (let (($x22 (= ((_ extract 255 0) c) ca)))
 (and (and (distinct (ite (bvslt n (_ bv0 296)) (_ bv18446744073709551615 296) (_ bv0 296)) ((_ extract 295 0) c)) true) (and $x22 $x93)))))))))))))))))
(check-sat)
